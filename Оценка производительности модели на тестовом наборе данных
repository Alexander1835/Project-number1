import tensorflow as tf
from tensorflow.keras import layers, models

# Загрузка данных для обучения
(train_images, train_labels), (test_images, test_labels) = tf.keras.datasets.mnist.load_data()

# Преобразование значений пикселей в диапазон от 0 до 1
train_images, test_images = train_images / 255.0, test_images / 255.0

# Создание модели нейронной сети
model = models.Sequential([
    layers.Flatten(input_shape=(28, 28)),       # Преобразование двумерного массива пикселей в одномерный
    layers.Dense(128, activation='relu'),       # Полносвязный слой с 128 нейронами и функцией активации ReLU
    layers.Dense(10, activation='softmax')      # Выходной слой с 10 нейронами (по числу классов) и функцией активации softmax
])

# Компиляция модели
model.compile(optimizer='adam',                # Оптимизатор
              loss='sparse_categorical_crossentropy',  # Функция потерь для задачи классификации
              metrics=['accuracy'])             # Метрика для оценки производительности модели

# Обучение модели
model.fit(train_images, train_labels, epochs=5)

# Оценка производительности модели на тестовом наборе данных
test_loss, test_acc = model.evaluate(test_images, test_labels)
print('Test accuracy:', test_acc)
